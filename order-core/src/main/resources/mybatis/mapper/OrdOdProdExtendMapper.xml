<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.order.dao.mapper.interfaces." >
  <resultMap id="BaseResultMap" type="com.ai.slp.order.dao.mapper.bo.OrdOdProdExtend" >
    <id column="PROD_DETAL_EXTEND_ID" property="prodDetalExtendId" jdbcType="DECIMAL" />
    <result column="PROD_DETAL_ID" property="prodDetalId" jdbcType="DECIMAL" />
    <result column="ORDER_ID" property="orderId" jdbcType="DECIMAL" />
    <result column="TENANT_ID" property="tenantId" jdbcType="VARCHAR" />
    <result column="INFO_JSON" property="infoJson" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PROD_DETAL_EXTEND_ID, PROD_DETAL_ID, ORDER_ID, TENANT_ID, INFO_JSON
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdProdExtendCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from ord_od_prod_extend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ord_od_prod_extend
    where PROD_DETAL_EXTEND_ID = #{prodDetalExtendId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ord_od_prod_extend
    where PROD_DETAL_EXTEND_ID = #{prodDetalExtendId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdProdExtendCriteria" >
    delete from ord_od_prod_extend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdProdExtend" >
    insert into ord_od_prod_extend (PROD_DETAL_EXTEND_ID, PROD_DETAL_ID, ORDER_ID, 
      TENANT_ID, INFO_JSON)
    values (#{prodDetalExtendId,jdbcType=DECIMAL}, #{prodDetalId,jdbcType=DECIMAL}, #{orderId,jdbcType=DECIMAL}, 
      #{tenantId,jdbcType=VARCHAR}, #{infoJson,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdProdExtend" >
    insert into ord_od_prod_extend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="prodDetalExtendId != null" >
        PROD_DETAL_EXTEND_ID,
      </if>
      <if test="prodDetalId != null" >
        PROD_DETAL_ID,
      </if>
      <if test="orderId != null" >
        ORDER_ID,
      </if>
      <if test="tenantId != null" >
        TENANT_ID,
      </if>
      <if test="infoJson != null" >
        INFO_JSON,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="prodDetalExtendId != null" >
        #{prodDetalExtendId,jdbcType=DECIMAL},
      </if>
      <if test="prodDetalId != null" >
        #{prodDetalId,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=DECIMAL},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="infoJson != null" >
        #{infoJson,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdProdExtendCriteria" resultType="java.lang.Integer" >
    select count(*) from ord_od_prod_extend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ord_od_prod_extend
    <set >
      <if test="record.prodDetalExtendId != null" >
        PROD_DETAL_EXTEND_ID = #{record.prodDetalExtendId,jdbcType=DECIMAL},
      </if>
      <if test="record.prodDetalId != null" >
        PROD_DETAL_ID = #{record.prodDetalId,jdbcType=DECIMAL},
      </if>
      <if test="record.orderId != null" >
        ORDER_ID = #{record.orderId,jdbcType=DECIMAL},
      </if>
      <if test="record.tenantId != null" >
        TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.infoJson != null" >
        INFO_JSON = #{record.infoJson,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ord_od_prod_extend
    set PROD_DETAL_EXTEND_ID = #{record.prodDetalExtendId,jdbcType=DECIMAL},
      PROD_DETAL_ID = #{record.prodDetalId,jdbcType=DECIMAL},
      ORDER_ID = #{record.orderId,jdbcType=DECIMAL},
      TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      INFO_JSON = #{record.infoJson,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdProdExtend" >
    update ord_od_prod_extend
    <set >
      <if test="prodDetalId != null" >
        PROD_DETAL_ID = #{prodDetalId,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null" >
        ORDER_ID = #{orderId,jdbcType=DECIMAL},
      </if>
      <if test="tenantId != null" >
        TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="infoJson != null" >
        INFO_JSON = #{infoJson,jdbcType=VARCHAR},
      </if>
    </set>
    where PROD_DETAL_EXTEND_ID = #{prodDetalExtendId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdProdExtend" >
    update ord_od_prod_extend
    set PROD_DETAL_ID = #{prodDetalId,jdbcType=DECIMAL},
      ORDER_ID = #{orderId,jdbcType=DECIMAL},
      TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      INFO_JSON = #{infoJson,jdbcType=VARCHAR}
    where PROD_DETAL_EXTEND_ID = #{prodDetalExtendId,jdbcType=DECIMAL}
  </update>
</mapper>